---
title: "Starter Notebook"
author: "Adaobi Nwankwo, Scientist"
format: html
execute:
  keep-md: true
---

```{r setup, include = FALSE}
#Load in any packages you need
rm(list = ls())
library(tidyverse)

#Read in any data

```


## Challenge 1

Creating a list of nucleotides contaning the four nucleotides.


```{r}
nucleotides <- c("Adenine (A)", "Cytosine (C), ", "Guanine (G)", "Thymine (T)")

nucleotides
```


## Challenge 2

Creating a random string of 15 nucleotides.


```{r}
genomeLength <- 15

randGenome <- sample(nucleotides, size = genomeLength, replace = TRUE)

paste(randGenome, collapse = "")
```


## Challenge 3

Creating a random genome which is 1500 nucleotides long.


```{r}
genomeLength <- 1500

randGenome <- sample(nucleotides, size = genomeLength, replace = TRUE)

paste(randGenome, collapse = "")
```

```{r}
set.seed(215)
genomeLength <- 100

randGenome <- sample(nucleotides, size = genomeLength, replace = TRUE)

paste(randGenome, collapse = "")

```


## Challenge 4

Looping with for loops.


```{r}
mySum <- 0

for(i in 1:10){
  mySum <- mySum + i
  print(mySum)
}
```


## Challenge 5

Writing and executing a loop.


```{r}
myProduct <- 1

for(j in 1:15){
  myProduct <- myProduct + i
  print(myProduct)
}
```

```{r}
nucleotides <- c("A", "C", "G", "T")
genomeLength <- 10

randGenome <- paste(
  sample(nucleotides, size = genomeLength, replace = TRUE),
                   collapse = "")
print(randGenome)
```


## Challenge 6

Generating a random genome substring consisting of 10 nucleotides.


```{r}
randGenome <- sample(nucleotides, size=genomeLength, replace = TRUE)
randGenome
randGenome <- paste(randGenome, collapse = "")
randGenome

for(j in 1:15){
  print(str_sub(randGenome, start = 1, end = 1))
}
```

```{r}
for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    print(str_sub(randGenome, start = i, end = i))
  }
}
```

```{r}
for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "G"){
    print(str_sub(randGenome, start = i, end = i))
  }
}
```

```{r}
for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "T"){
    print(str_sub(randGenome, start = i, end = i))
  }
}
```

```{r}
for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "C"){
    print(str_sub(randGenome, start = i, end = i))
  }
}
```


## Challenge 7

Adapting the loop so it provides the count of occurences of Adenine.


```{r}

randGenome 
randGenome <- paste(randGenome, collapse = "")
randGenome

Adenine_count <- 0

#nchar: number of characters

for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    Adenine_count <- Adenine_count + 1
  }
}
print(Adenine_count)
```


## Challenge 8

Adapting the loop to count for the count of frequencies for each nucleotide.


```{r}
randGenome 
randGenome <- paste(randGenome, collapse = "")
randGenome

Adenine_count <- 0

#nchar: number of characters

for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    Adenine_count <- Adenine_count + 1
  }
}
Cytosine_count <- 0

for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "C"){
    Cytosine_count <- Cytosine_count + 1
  }
}

Thymine_count <- 0

for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "T"){
    Thymine_count <- Thymine_count + 1
  }
}

Guanine_count <- 0

for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "G"){
    Guanine_count <- Guanine_count + 1
  }
}
print(Adenine_count)
print(Cytosine_count)
print(Thymine_count)
print(Guanine_count)
```

```{r}
vib_c <- scan("~/Desktop/Bioinformatics Data/Untitled.txt", what = "character", sep = NULL)
vib_c
```


## Challenge 9


```{r}
vib_c
vib_c <- paste(vib_c, collapse = "")

Adenine_count <- 0

#nchar: number of characters

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "A"){
    Adenine_count <- Adenine_count + 1
  }
}
Cytosine_count <- 0

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "C"){
    Cytosine_count <- Cytosine_count + 1
  }
}

Thymine_count <- 0

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "T"){
    Thymine_count <- Thymine_count + 1
  }
}

Guanine_count <- 0

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "G"){
    Guanine_count <- Guanine_count + 1
  }
}
print(Adenine_count)
print(Cytosine_count)
print(Thymine_count)
print(Guanine_count)
```


## Challenge 10


```{r}
vib_c <- scan("~/Desktop/Bioinformatics Data/Rosalind_DNA.txt", what = "character", sep = NULL)
vib_c
```

```{r}
vib_c
vib_c <- paste(vib_c, collapse = "")

Adenine_count <- 0

#nchar: number of characters

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "A"){
    Adenine_count <- Adenine_count + 1
  }
}
Cytosine_count <- 0

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "C"){
    Cytosine_count <- Cytosine_count + 1
  }
}

Thymine_count <- 0

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "T"){
    Thymine_count <- Thymine_count + 1
  }
}

Guanine_count <- 0

for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "G"){
    Guanine_count <- Guanine_count + 1
  }
}
print(Adenine_count)
print(Cytosine_count)
print(Thymine_count)
print(Guanine_count)
```


# Replication Origin, Part 1

## The Search for the Replication Origin


```{r}
nucleotide_frequency <- function(genomeString, nucleotide = "A"){
  count <- 0
  for(i in 1:nchar(genomeString)){
    if(str_sub(genomeString, start = i, end = i) == nucleotide){
      count <- count + 1
    }
  }
  return(count)
}

nucleotide_frequency("ACTTGCGGGTATCGAG", "G")
```


## Challenge 1


```{r}
nt_sample <- sample(nucleotides, size = 2000, replace = TRUE)
nt_sample <- paste(nt_sample, collapse = "")

nucleotide_frequency(nt_sample, "C")
```


## Challenge 2


```{r}
rand_genome <- function(k){
 randGenome <- sample(nucleotides, size = genomeLength, replace = TRUE)

  randGenome <- paste(randGenome, collapse = "")
  return(randGenome)
}

rand_genome(10)
```


## Challenge 3

